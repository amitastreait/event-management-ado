# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pr:
 branches:
  include:
    - main
    - master

pool:
  vmImage: ubuntu-latest

stages:

  - stage: ReadPRBody
    jobs:
    - job: FetchPRDetails
      steps:
      - powershell: |
          $prId = $env:SYSTEM_PULLREQUEST_PULLREQUESTID
          $project = $env:SYSTEM_TEAMPROJECT
          $repoId = $env:BUILD_REPOSITORY_ID
          $organization = "pantherschools"  # Replace with your organization name
          $uri = "https://dev.azure.com/$organization/$project/_apis/git/repositories/$repoId/pullRequests/$prId?api-version=7.1-preview.1"
          
          $response = Invoke-RestMethod -Uri $uri -Headers @{Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"}
          $prBody = $response.description
          
          # Save PR body to a file
          $filePath = "$(Build.ArtifactStagingDirectory)/PR_Body.txt"
          $prBody | Out-File -FilePath $filePath -Encoding utf8
          Write-Host "##vso[task.setvariable variable=PR_BODY_FILE]$filePath"
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        displayName: "Fetch and Save PR Body"
      - script: |
          # Display the PR body
          echo "Pull Request Body:"
          cat $(PR_BODY_FILE)
        displayName: "Display PR Body"

  - stage: SFDeployANDValidate
    jobs:
      - job: SFValidate
        steps:
          - script: npm install -g @salesforce/cli
            displayName: Install Salesforce CI
          - script: sf --version
            displayName: Verify CLI Installation 
          - script: |
              echo 'y' | sf plugins install sfdx-git-delta
              sf plugins install @salesforce/sfdx-scanner
            displayName: Install Required Plugins
      - job: SFDeploy
        steps:
          - script: echo "SFBuild is running"
            displayName: Single Line Script
          - script: |
              echo "Multiple line 1"
              echo "Multiple line 2"
            displayName: MultiLine Script

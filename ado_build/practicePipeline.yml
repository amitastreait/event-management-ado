# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr:
  branches:
      include:
        - uat
        - UAT
  paths:
    include:
      - force-app/*
      - ado_build/practicePipeline.yml

pool:
  vmImage: ubuntu-latest

variables:
  - group: uat
  - name: repoOwner
    value: "amitastreait"
  - name: repoName
    value: "event-management-ado"

stages:
  - stage: SFDeployANDValidate
    jobs:
      - job: SFValidate
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: Checkout to correct commit
          - task: PowerShell@2
            name: fetchPRBody
            displayName: "Fetch GitHub PR Description"
            inputs:
              targetType: 'inline'
              script: |
                  # Define GitHub API URL
                  $prNumber = "$(System.PullRequest.PullRequestId)"  #Fetch PR ID from ADO pipeline variable
                  echo $prNumber
                  $url = "https://api.github.com/repos/$(repoOwner)/$(repoName)/pulls/$prNumber"

                  # GitHub API authentication (Use GitHub PAT stored as a secret variable in ADO)
                  $headers = @{
                      Authorization = "Bearer $(GITHUB_PAT)"  # GITHUB_PAT should be stored securely in ADO
                      Accept = "application/vnd.github.v3+json"
                  }
                  # Fetch PR details
                  $response = Invoke-RestMethod -Uri $url -Method 'GET' -Headers $headers -ContentType "application/json"
                  # Extract PR description
                  $description = $response.body  # PR description
                  # Replace newlines to avoid truncation
                  $description = $description -replace "`r`n", " "  # Windows newlines
                  $description = $description -replace "`n", " "    # Unix newlines
                  # Store PR description as a pipeline variable
                  Write-Host "##vso[task.setvariable variable=PR_BODY;isOutput=true]$description"
          - script: |
              echo "$(SFValidate.prbody.PR_BODY)"
            displayName: Azure DevOps PR BODY